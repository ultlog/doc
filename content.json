{"pages":[{"title":"About","date":"2020-07-29T15:36:06.168Z","path":"about/index.html","text":"关于链接github"},{"title":"Categories","date":"2020-07-29T15:36:06.168Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2020-07-29T15:36:06.168Z","path":"tags/index.html","text":""}],"posts":[{"title":"性能测试","date":"2020-07-29T14:09:01.000Z","path":"2020/07/29/系统说明/测试/benchmark/","text":"前言本次性能测试有以下几点说明 仅针对ula服务进行查询测试。 测试的目标ula服务与elasticsearch服务都为默认配置。即二者启动时均未对连接数/内存等进行调整。详见系统配置。 仅对ula中日志接口（/api/v1/log）进行测试，该接口内部包含两次elasticsearch查询，加之日常使用极少深度分页，因此该接口在一定程度上能够作为测试基准。 本次性能测试的目标为满足五十人左右团队使用时接口不会出现大于1000ms响应。 经日常工作经验可知团队内同时使用ultlog的人数大约为1/10 - 1/5 ，因此取极限10绝对并发进行测试。 本次测试的总请求次数设置为50*10，即10人各自连续调用服务50次，较大于日常使用ultlog查询日志时的实际情况，因此可以覆盖日常使用的极限值。 本次测试的数据量为数日积累，大约在三百万左右。 系统配置在测试之前，待测试ula服务，elasticsearch服务，搭载服务的虚拟机的配置如下 ula1jmap -heap &#123;ula pid&#125; 123456789101112131415161718192021Heap Configuration: MinHeapFreeRatio &#x3D; 0 MaxHeapFreeRatio &#x3D; 100 MaxHeapSize &#x3D; 2065694720 (1970.0MB) NewSize &#x3D; 42991616 (41.0MB) MaxNewSize &#x3D; 688390144 (656.5MB) OldSize &#x3D; 87031808 (83.0MB) NewRatio &#x3D; 2 SurvivorRatio &#x3D; 8 MetaspaceSize &#x3D; 21807104 (20.796875MB) CompressedClassSpaceSize &#x3D; 1073741824 (1024.0MB) MaxMetaspaceSize &#x3D; 17592186044415 MB G1HeapRegionSize &#x3D; 0 (0.0MB)Heap Usage:PS Young GenerationEden Space: capacity &#x3D; 30932992 (29.5MB) used &#x3D; 22519952 (21.476699829101562MB) free &#x3D; 8413040 (8.023300170898438MB) 72.80237230203919% used 更多参数可见ula_config elasticsearch配置12jhsdb jmap --heap --pid &#123;elasticsearch pid&#125; 1234567891011121314151617181920Heap Configuration: MinHeapFreeRatio &#x3D; 40 MaxHeapFreeRatio &#x3D; 70 MaxHeapSize &#x3D; 1073741824 (1024.0MB) NewSize &#x3D; 348913664 (332.75MB) MaxNewSize &#x3D; 348913664 (332.75MB) OldSize &#x3D; 724828160 (691.25MB) NewRatio &#x3D; 2 SurvivorRatio &#x3D; 8 MetaspaceSize &#x3D; 21807104 (20.796875MB) CompressedClassSpaceSize &#x3D; 1073741824 (1024.0MB) MaxMetaspaceSize &#x3D; 17592186044415 MB G1HeapRegionSize &#x3D; 0 (0.0MB)Heap Usage:New Generation (Eden + 1 Survivor Space): capacity &#x3D; 314048512 (299.5MB) used &#x3D; 248085416 (236.59268951416016MB) free &#x3D; 65963096 (62.907310485839844MB) 78.99588965414362% used 数据量本次测试的数据量通过如下命令获得： 1curl &#123;elasticsearch host&#125;/ult_index/_count 结果： 1&#123;\"count\":34232030,\"_shards\":&#123;\"total\":1,\"successful\":1,\"skipped\":0,\"failed\":0&#125;&#125; 更多参数可见ula_config linux123456files=$(ls /proc/sys/net/ipv4)for file in $filesdo echo \"$file\" cat \"$1\"/\"$file\"done 123456789101112131415cipso_cache_bucket_size10cipso_cache_enable1cipso_rbm_optfmt0cipso_rbm_strictvalid1conficmp_echo_ignore_all0icmp_echo_ignore_broadcasts1icmp_errors_use_inbound_ifaddr0 更多参数可见ula_config 测试测试工具本次测试选择apachbench进行测试，根据前言中所写得到以下命令： 1ab -n 500 -c 10 -g ula_test_output http://&#123;target&#125;/api/v1/log 测试结果测试报告123456789101112131415161718192021222324252627282930313233343536373839404142This is ApacheBench, Version 2.3 &lt;$Revision: 1874286 $&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http:&#x2F;&#x2F;www.zeustech.net&#x2F;Licensed to The Apache Software Foundation, http:&#x2F;&#x2F;www.apache.org&#x2F;Benchmarking &#123;target&#125; (be patient)Server Software: nginx&#x2F;1.17.1Server Hostname: &#123;target&#125;Server Port: 80Document Path: &#x2F;api&#x2F;v1&#x2F;logDocument Length: 4186 bytesConcurrency Level: 10Time taken for tests: 6.133 secondsComplete requests: 500Failed requests: 0Total transferred: 2201000 bytesHTML transferred: 2093000 bytesRequests per second: 81.53 [#&#x2F;sec] (mean)Time per request: 122.660 [ms] (mean)Time per request: 12.266 [ms] (mean, across all concurrent requests)Transfer rate: 350.47 [Kbytes&#x2F;sec] receivedConnection Times (ms) min mean[+&#x2F;-sd] median maxConnect: 0 2 1.9 2 15Processing: 28 105 58.8 91 838Waiting: 27 102 58.1 88 821Total: 31 107 58.9 94 839Percentage of the requests served within a certain time (ms) 50% 94 66% 115 75% 128 80% 136 90% 180 95% 211 98% 243 99% 268 100% 839 (longest request) 输出结果1234567891011starttime seconds ctime dtime ttime waitWed Jul 29 18:39:46 2020 1596019186 3 28 31 27Wed Jul 29 18:39:47 2020 1596019187 2 35 37 35Wed Jul 29 18:39:43 2020 1596019183 1 36 37 35Wed Jul 29 18:39:43 2020 1596019183 5 33 38 30Wed Jul 29 18:39:43 2020 1596019183 1 37 38 34Wed Jul 29 18:39:45 2020 1596019185 1 38 39 37Wed Jul 29 18:39:47 2020 1596019187 5 34 39 34Wed Jul 29 18:39:46 2020 1596019186 1 39 40 38Wed Jul 29 18:39:43 2020 1596019183 2 38 40 38Wed Jul 29 18:39:45 2020 1596019185 9 31 40 28 更多可见ula_test_output 结论由测试结果可知本次性能测试可以通过。","tags":[{"name":"性能","slug":"性能","permalink":"http://ultlog.com/tags/%E6%80%A7%E8%83%BD/"}],"categories":[{"name":"系统说明","slug":"系统说明","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/"},{"name":"测试","slug":"系统说明/测试","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/%E6%B5%8B%E8%AF%95/"}]},{"title":"ulu","date":"2020-07-26T12:06:42.000Z","path":"2020/07/26/系统说明/ulu/ulu/","text":"前言ulu全称未ultlog-ui，是ultlog系统中展示日志的web程序。 安装下载点击此处下载。 如果部署在windows系统，可以选择下载ulu-nginx，其自带一个免安装版本的nginx。 安装将下载的文件解压到nginx的html路径下，目录结构为{base_path}/nginx/html/index.html 和 {base_path}/nginx/html/static 修改nginx配置文件中的反向代理配置，添加如下代码 123location ^~ &#x2F;api &#123; proxy_pass http:&#x2F;&#x2F;&#123;ula-host&#125;:&#123;ula-ip&#125;;&#125; 将其中ula-ip/port替换为ula服务部署的地址和端口 启动nginx1start nginx 更多更多关于ulu的信息可以访问ultlog文档中心查阅。","tags":[{"name":"ulu","slug":"ulu","permalink":"http://ultlog.com/tags/ulu/"}],"categories":[{"name":"系统说明","slug":"系统说明","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/"},{"name":"ulu","slug":"系统说明/ulu","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/ulu/"}]},{"title":"ula","date":"2020-07-26T12:04:42.000Z","path":"2020/07/26/系统说明/ula/ula/","text":"ula前置需要7.x版本的Elasticsearch 安装下载点击此处下载ula-0.0.1.jar 运行1java -jar -D\"ultlog.es.address.host=&#123;es-ip&#125;\" -D\"ultlog.es.address.port=&#123;es-port&#125;\" ula-0.0.1.jar 替换其中es-ip与es-port 个性化如果需要修改端口ip等配置信息可以在启动项加入 1-Dspring.port=8888 更建议创建一个配置文件在同级目录，修改配置更方便。 更多更多关于ulu的信息可以访问ultlog文档中心查阅。","tags":[{"name":"ula","slug":"ula","permalink":"http://ultlog.com/tags/ula/"}],"categories":[{"name":"系统说明","slug":"系统说明","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/"},{"name":"ula","slug":"系统说明/ula","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/ula/"}]},{"title":"searcher","date":"2020-07-26T12:02:42.000Z","path":"2020/07/26/系统说明/searcher/searcher/","text":"前言searcher 是ultlog系统中收集日志的一个程序。通过对系统中日志文件的监控，实时的将产生的日志发送到ula中。与collector不同，searcher不需要在工程中集成，转而在操作系统中集成。因此一些非基于logback的java项目（非常少）或非java项目也可以通过修改日志的格式而将日志托管给ultlog，享受ultlog带来的便利。 前置searcher使用java编写，因此在应用searcher的操作系统上需要jdk8以上的环境，若系统中没有以上环境则可以使用自带jdk的searcher包进行部署。 建议将执行脚本下载到内网，通过minio，ftp或http服务挂载，并以此编写自动集成脚本，具体可见自动集成实践。 如果有大量环境需要集成建议查看自动集成实践来快速编写自动集成脚本。 安装程序配置将要应用searcher的程序的logback日志格式应如下： 1%d&#123;yyyy-MM-dd HH:mm:ss&#125; [%-5level] [%-5thread] %logger&#123;20&#125; - %msg%n&lt;&#x2F;pattern&gt; 如果非logback项目或非java项目应将日志格式调整为如此： 12342020-07-21 09:16:37 [ERROR] [pool-420-thread-7] c.t.g.h.HttpConnectionPoolUtil - test errorjava.lang.RuntimeException: test errorat com.example.demo.DemoApplicationTests.contextLoads(DemoApplicationTests.java:21).... 选择软件包 环境 软件包 &lt; jdk 1.8 searcher_jdk.tar.gz &gt;= jdk 1.8 searcher.tar.gz 无jdk searcher_jdk.tar.gz 手动/单机集成docker linux 使用exec等命令进入docker镜像 将下载好的软件包传入（可以在镜像内使用curl等命令进行下载） 解压文件 执行 sh searcher.sh {args} linux 将下载好的软件包传入 可以在镜像内使用curl等命令进行下载 解压文件 执行 sh searcher.sh {args} windows修改{searcher path}/application.yml，正确填写其中配置项执行语句启动 1java -jar searcher.jar 如果是非jdk8环境 1&#123;searcher_path&#125;/java -jar searcher.jar 自动集成实践自动集成提供docker环境文件的改造，如需在jenkins或其他平台集成可以参照此进行改造。 原DOCKERFILE123FROM java:8ADD demo.jar /demo.jarENTRYPOINT [\"java\",\"jar\",\"/demo.jar\"] 改造后在程序同级**.jar同级目录添加名称为start.sh的脚本（可以通过cp等命令移动到jar所在目录，下同），内容如下： 12sh startSearcher.sh -f /opt/application.ymljava -jar /demo.jar 在原jar目录添加文件 startSearcher.sh application.yml 修改DOCKERFILE 12345FROM java:8ADD demo.jar /demo.jarADD startSearcher.sh /startSearcher.shADD application.yml /opt/application.ymlENTRYPOINT [\"sh\",\"start.sh\"] 配置项说明使用配置文件使用配置文件即为将软件包内部的配置文件进行修改，然后存放到需要集成searcher的系统某个地址下，通过参数指定路径即可 参数 说明 是否必填 默认值 实例 -f , –file 配置文件的路径 √ /searcher/application.yml 直接传参不使用配置文件直接通过以下参数启动searcher服务 参数 说明 是否必填 默认值 实例 -p , –path 产生日志文件的路径 √ /logs/ –pattern 日志文件的关键字 √ error.log –project 项目名称 √ ultlog -m , –module 模块名称 √ searcher –uuid 服务唯一属性 √ 4RFS23Q –max 同时监控的最多文件数 × 10 12 –level 收集日志的最低等级 × INFO WARN -u , –ula ula服务地址 √ http://192.168.2.2:8080/ 配置实例以下是测试时使用的配置文件，仅供参考 123456789101112ultlog: searcher: path: F:\\Java\\Workspace\\ultlog\\collector\\logs pattern: demo max: 10 project: searcherTest module: test uuid: test log: level: INFO ula: url: http://localhost:8080/","tags":[{"name":"searcher","slug":"searcher","permalink":"http://ultlog.com/tags/searcher/"}],"categories":[{"name":"系统说明","slug":"系统说明","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/"},{"name":"searcher","slug":"系统说明/searcher","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/searcher/"}]},{"title":"未来规划","date":"2020-07-26T12:00:42.000Z","path":"2020/07/26/版本变更/feature/","text":"2020-07-29 基于kafka的日志发送，即不依赖于http请求 ula缓存 ula均衡负载 ula对elasticsearch的鉴权，集群适配 短信/邮件告警 golang版本的searcher 英文文档 docker版ulu与ula","tags":[{"name":"version feature","slug":"version-feature","permalink":"http://ultlog.com/tags/version-feature/"}],"categories":[{"name":"版本变更","slug":"版本变更","permalink":"http://ultlog.com/categories/%E7%89%88%E6%9C%AC%E5%8F%98%E6%9B%B4/"}]},{"title":"collector","date":"2020-07-26T12:00:42.000Z","path":"2020/07/26/系统说明/collector/collector/","text":"前言collector是基于logback开发的日志收集组件，适用于使用logback日志框架的系统。collector通过对logback框架中的appender接口扩展而将收集到的日志发送到ula系统。相比于searcher，collector能够适应更改多变的日志格式，并且在部署时不需要编写额外的脚本。 集成引入12345&lt;dependency&gt; &lt;groupId&gt;com.ultlog&lt;/groupId&gt; &lt;artifactId&gt;collector&lt;/artifactId&gt; &lt;version&gt;1.0.0&lt;/version&gt;&lt;/dependency&gt; 集成在logback.xml/logback-test.xml等生效的logback配置文件中添加如下配置 1234567891011&lt;appender name=\"ultlog\" class=\"com.ultlog.collector.appender.UlaAppender\"&gt; &lt;param name=\"url\" value=\"&#123;ula&#125;/api/v1/log\"/&gt; &lt;param name=\"project\" value=\"&#123;project&#125;\"/&gt; &lt;param name=\"module\" value=\"&#123;module&#125;\"/&gt; &lt;param name=\"uuid\" value=\"&#123;uuid&#125;\"/&gt;&lt;/appender&gt;&lt;root level=\"ERROR\"&gt; &lt;appender-ref ref=\"ultlog\"/&gt;&lt;/root&gt; 异步处理日志如果想使用异步appender可以采用logback文档中appender文档中的AsyncAppender部分。 配置项说明 配置项 说明 ula ula服务的地址 project 项目名称 module 模块名称（如果非微服务项目可以与project相等） uuid 服务唯一属性 实例&lt;appender name=\"ultlog\" class=\"com.ultlog.collector.appender.AsyncEsAppender\"&gt; &lt;param name=\"threadPoolProviderName\" value=\"com.ultlog.collector.support.DefaultThreadPoolProvider\"/&gt; &lt;param name=\"url\" value=\"http://localhost:8080/api/v1/log\"/&gt; &lt;param name=\"project\" value=\"ula-test\"/&gt; &lt;param name=\"module\" value=\"ula-test\"/&gt; &lt;param name=\"uuid\" value=\"ula-test-uuid\"/&gt; &lt;/appender&gt;","tags":[{"name":"collector","slug":"collector","permalink":"http://ultlog.com/tags/collector/"}],"categories":[{"name":"系统说明","slug":"系统说明","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/"},{"name":"collector","slug":"系统说明/collector","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/collector/"}]},{"title":"v0.0.1","date":"2020-07-19T06:59:42.000Z","path":"2020/07/19/版本变更/v0-0-1/","text":"功能新增 增加了collector 增加了ulu 增加了ulu 通过collector完成了基本的日志收集与展示功能 功能变动无 解决问题无 其他该版本为预览版本，仅作功能演示用，因此仍有功能亟待开发，部分低优先级问题将在v1.0.0版本统一解决。","tags":[{"name":"version","slug":"version","permalink":"http://ultlog.com/tags/version/"}],"categories":[{"name":"版本变更","slug":"版本变更","permalink":"http://ultlog.com/categories/%E7%89%88%E6%9C%AC%E5%8F%98%E6%9B%B4/"}]},{"title":"v1.0.0","date":"2020-07-19T06:59:42.000Z","path":"2020/07/19/版本变更/v1-0-0/","text":"","tags":[{"name":"version","slug":"version","permalink":"http://ultlog.com/tags/version/"}],"categories":[{"name":"版本变更","slug":"版本变更","permalink":"http://ultlog.com/categories/%E7%89%88%E6%9C%AC%E5%8F%98%E6%9B%B4/"}]},{"title":"ultlog","date":"2020-07-19T06:19:01.000Z","path":"2020/07/19/index/","text":"前言ultlog是一个日志收集，过滤，展示的系统。基于高性能地Elasticsearch以及logback等java框架，可以快速地对线上日志数据进行收集，并且提供ula页面进行日志地展示。相比于原始地日志系统/框架，ultlog有如下优势： 分布式系统日志能够地统一收集 避免了登录虚拟机/跳板机查询日志 可以通过时间或关键字进行日志检索，省去了编写查询语句的时间 可以以服务/模块/系统唯一标识等属性区分日志，方便微服务架构下日志的准确查找 性能优越，单机ultlog以及单机elasticsearch服务可以轻松满足数十人团队，日均五十余万条日志的存储与查询。 开始使用 架构日志数据流转 searchersearcher 是ultlog系统中收集日志的一个程序。通过对系统中日志文件的监控，实时的将产生的日志发送到ula中。与collector不同，searcher不需要在工程中集成，转而在操作系统中集成。因此一些非基于logback的java项目（非常少）或非java项目也可以通过修改日志的格式而将日志托管给ultlog，享受ultlog带来的便利。 collectorcollector是基于logback开发的日志收集组件，适用于使用logback日志框架的系统。collector通过对logback框架中的appender接口扩展而将收集到的日志发送到ula系统。相比于searcher，collector能够适应更改多变的日志格式，并且在部署时不需要编写额外的脚本。 ulaula为ultlog系统中的日志与网络请求处理服务，收集到的日志通过ula存储进Elasticsearch数据库，并且通过Restful风格的接口对外提供查询功能。 uluulu为ultlog系统日志展示程序。可以通过系统名称，日志产生时间，日志信息等多个维度进行日志的查询。 开始使用ula部署说明ulu部署说明collector部署说明searcher部署说明 性能关于ultlog的性能可以查看性能测试章节。 未来规划更多新功能正在开发，欢迎通过未来规划查阅。","tags":[],"categories":[]}],"categories":[{"name":"系统说明","slug":"系统说明","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/"},{"name":"测试","slug":"系统说明/测试","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/%E6%B5%8B%E8%AF%95/"},{"name":"ulu","slug":"系统说明/ulu","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/ulu/"},{"name":"ula","slug":"系统说明/ula","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/ula/"},{"name":"searcher","slug":"系统说明/searcher","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/searcher/"},{"name":"版本变更","slug":"版本变更","permalink":"http://ultlog.com/categories/%E7%89%88%E6%9C%AC%E5%8F%98%E6%9B%B4/"},{"name":"collector","slug":"系统说明/collector","permalink":"http://ultlog.com/categories/%E7%B3%BB%E7%BB%9F%E8%AF%B4%E6%98%8E/collector/"}],"tags":[{"name":"性能","slug":"性能","permalink":"http://ultlog.com/tags/%E6%80%A7%E8%83%BD/"},{"name":"ulu","slug":"ulu","permalink":"http://ultlog.com/tags/ulu/"},{"name":"ula","slug":"ula","permalink":"http://ultlog.com/tags/ula/"},{"name":"searcher","slug":"searcher","permalink":"http://ultlog.com/tags/searcher/"},{"name":"version feature","slug":"version-feature","permalink":"http://ultlog.com/tags/version-feature/"},{"name":"collector","slug":"collector","permalink":"http://ultlog.com/tags/collector/"},{"name":"version","slug":"version","permalink":"http://ultlog.com/tags/version/"}]}